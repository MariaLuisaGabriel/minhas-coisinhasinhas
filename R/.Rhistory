v <- scan("",list)
#8
v <- scan()
v
v[1]
#8
v <- c()
num.impar = function(v) {
v<-scan()
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
num.impar(v)
if(s==7 | s==11) resultados <- c(resultados,1)
else if(s==2 | s==3 | s==12) resultados <- c(resultados,0)
else
if(s==7 | s==11)
{resultados <- c(resultados,1)}else
if(s==2 | s==3 | s==12) {resultados <- c(resultados,0)}else
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
s==7
dado1+dado2
s==7 | s==11
s2<-s
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}
}
}
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 && s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
mean(resultados)
setwd("C:/Users/maria luisa/OneDrive/Documentos/dev/minhas-coisinhasinhas/R")
titanic<-read.csv("1403.csv")
str(titanic) #ver a estrutura da variável
titanic<-titanic[,-1] #,N = N-ésima coluna. ,-N = exceto a N-ésima coluna.
titanic$Survived<-as.factor(titanic$Survived) #fator de 2 níveis, um representa o 0 (fracasso) e outro representa o 1 (sucesso)
table(titanic$Survived) #tabela que mostra os dois niveis do fator e quantas variáveis categóricas há em cada nível
prop.table(table(titanic$Survived)) #criar tabela de proporções, fazer a porcentagem de peso de cada nível comparado com o total
round(prop.table(table(titanic$Survived)), digits = 3) #arredondar valores da tabela de proporções
barplot(table(titanic$Survived), ylim = c(0,600), names.arg = c("morreu","sobreviveu"), col = "#756bb1") #tabela de barras de quantas variáveis categóricas há em cada nivel do fator
#fazer a mesma coisa com o sexo dos passageiros:
titanic$Sex<-as.factor(titanic$Sex)
round(prop.table(table(titanic$Sex)), digits = 3) #tabela de proporçoes arredondada da tabela de quantidade de categorias de cada nível do fator Sex
barplot(table(titanic$Sex),ylim = c(0,600),names.arg = c("muie","home"),col = c("#feb24c","#f03b20"), main = "frequencia do sexo")
barplot(table(titanic$Survived,titanic$Sex),ylim = c(0,900),xlim = c(0,3),col = c("#7570b3","#8da0cb"),legend = TRUE, legend.text = c("morreu","sobreviveu"), args.legend = list(bty = "n",x = "top",cex = 1))
iris # tabela ja embutida no programa
indices <- sample(1:nrow(iris),size = (nrow(iris)),replace = FALSE)
sample(150)
iris<-iris[indices,] #embaralhar as linhas da tabela
n<-round(nrow(iris)*0.8) #pega 80% das iris
n
treinamento<-iris[1:n,] #separa 80% das iris
teste<-iris[(n+1):nrow(iris),] #deixa os 20% em outra variavel
a<-boxplot(treinamento$Petal.Length)
a$stats
order(treinamento$Petal.Length) #poderia ter usado o sort (ordena o vetor e muda a posiçao dos valores, enquanto o order so mostra as posiçoes dos elementos), mas esqueci KKKKKKKK
b<-length(treinamento$Petal.Length)
#n/2 - ésimo elemento + n/2+1 - ésimo elemento (pensando que eu não conheço o tamanho, mas sei que é par)
mediana<-((treinamento$Petal.Length[order(treinamento$Petal.Length)[b/2]]+treinamento$Petal.Length[order(treinamento$Petal.Length)[b/2+1]]))/2
#n/4 - ésimo elemento + n/4+1 - ésimo elemento (pensando que eu não conheço o tamanho, mas sei que é par)
prim_quartio<-((treinamento$Petal.Length[order(treinamento$Petal.Length)[b/4]]+treinamento$Petal.Length[order(treinamento$Petal.Length)[b/4+1]]))/2
#3*n/4 - ésimo elemento + 3*n/4+1 - ésimo elemento (pensando que eu não conheço o tamanho, mas sei que é par)
terc_quartio<-((treinamento$Petal.Length[order(treinamento$Petal.Length)[3*b/4]]+treinamento$Petal.Length[order(treinamento$Petal.Length)[3*b/4+1]]))/2
#usando sort:
c<-sort(treinamento$Petal.Length)
mediana<-(c[b/2]+c[b/2+1])/2
prim_quartio<-(c[b/4]+c[b/4+1])/2
terc_quartio<-(c[3*b/4]+c[3*b/4+1])/2
setosa<-treinamento[treinamento$Species == "setosa",] # so as setosa
virginica<-treinamento[treinamento$Species == "virginica",] # so as virginica
versicolor<-treinamento[treinamento$Species == "versicolor",] # so as versicolor
par(mfrow = c(1,2))
boxplot(setosa$Petal.Length, versicolor$Petal.Length, virginica$Petal.Length, names = c("setosa","versicolor","virginica"))
boxplot(setosa$Sepal.Width, versicolor$Sepal.Width, virginica$Sepal.Width, names = c("setosa","versicolor","virginica"))
iris.arvore<-rpart()
()
()
#calculo para pacotes em album da copa
grupinho <- c()
a<-c()
for(j in 1:1000){
album <- c()
pacotes <- 0
while(length(album)!=702){
figurinha <- sample(1:702,5,TRUE)
album <- unique(c(album,figurinha))
pacotes <- pacotes + 1
}
grupinho<- c(grupinho,pacotes)
a<-c(a,mean(grupinho))
}
mean(grupinho)
plot(x = 1:1000,y = a,type='l')
abline(h = 1011,col = 'green')
#d)
resp1999 <- chicago[chicago$year == 1999]$resp
chicago <- read.csv("chicago.csv",header = TRUE)
#a)Quantas mortes provocadas por doenças cardiovasculares ocorreram no perıodo do estudo?
total_mortes_cvd<- sum(chicago$cvd)
#b)Em qual estaçao de 1997 ocorreram mais mortes provocadas por doenças cardiovasculares e em qual estação ocorreram menos mortes provocadas por doenças  cardiovasculares? refaça a questão para os outros anos.
#mortes por cvd no inverno
winter <- chicago[chicago$season == "Winter",]
winter_1997 <- winter[winter$year==1997,]
mortes_cvd_winter_1997 <- sum(winter_1997$cvd)
winter_1998 <- winter[winter$year==1998,]
mortes_cvd_winter_1998 <- sum(winter_1998$cvd)
winter_1999 <- winter[winter$year==1999,]
mortes_cvd_winter_1999 <- sum(winter_1999$cvd)
winter_2000 <- winter[winter$year==2000,]
mortes_cvd_winter_2000 <- sum(winter_2000$cvd)
#mortes por cvd no verao
summer <- chicago[chicago$season == "Summer",]
summer_1997 <- summer[summer$year==1997,]
mortes_cvd_summer_1997 <- sum(summer_1997$cvd)
summer_1998 <- summer[summer$year==1998,]
mortes_cvd_summer_1998 <- sum(summer_1998$cvd)
summer_1999 <- summer[summer$year==1999,]
mortes_cvd_summer_1999 <- sum(summer_1999$cvd)
summer_2000 <- summer[summer$year==2000,]
mortes_cvd_summer_2000 <- sum(summer_2000$cvd)
#mortes por cvd no outono
autumn <- chicago[chicago$season == "Autumn",]
autumn_1997 <- autumn[autumn$year==1997,]
mortes_cvd_autumn_1997 <- sum(autumn_1997$cvd)
autumn_1998 <- autumn[autumn$year==1998,]
mortes_cvd_autumn_1998 <- sum(autumn_1998$cvd)
autumn_1999 <- autumn[autumn$year==1999,]
mortes_cvd_autumn_1999 <- sum(autumn_1999$cvd)
autumn_2000 <- autumn[autumn$year==2000,]
mortes_cvd_autumn_2000 <- sum(autumn_2000$cvd)
#mortes por cvd na primavera
spring <- chicago[chicago$season == "Spring",]
spring_1997 <- spring[spring$year==1997,]
mortes_cvd_spring_1997 <- sum(spring_1997$cvd)
spring_1998 <- spring[spring$year==1998,]
mortes_cvd_spring_1998 <- sum(spring_1998$cvd)
spring_1999 <- spring[spring$year==1999,]
mortes_cvd_spring_1999 <- sum(spring_1999$cvd)
spring_2000 <- spring[spring$year==2000,]
mortes_cvd_spring_2000 <- sum(spring_2000$cvd)
#mais mortes em 1997: winter
#menos mortes em 1997: summer
#mais mortes em 1998: winter
#menos mortes em 1998: summer
#mais mortes em 1999: winter
#menos mortes em 1999: summer
#mais mortes em 2000: autumn
#menos mortes em 2000: summer
#c) preguiça
#d)
resp1999 <- chicago[chicago$year == 1999]$resp
#d)
resp1999 <- chicago[chicago$year == 1999,]$resp
#d)
1999 <- chicago[chicago$year == 1999,]
#d)
y1999 <- chicago[chicago$year == 1999,]
rsp1999 <- y1999[y1999$season=="Spring"]$resp
rsp1999 <- y1999[y1999$season=="Spring",]$resp
rsm1999 <- y1999[y1999$season=="Summer",]$resp
raut1999 <- y1999[y1999$season=="Autumn",]$resp
rwin1999 <- y1999[y1999$season=="Winter",]$resp
mortes1999 <- dataframe(season = c(Spring, Summer, Autumn, Winter),sum_mortes = c(sum(rsp1999),sum(rsm1999),sum(raut1999),sum(rwin1999)))
mortes1999 <- data.frame(season = c(Spring, Summer, Autumn, Winter),sum_mortes = c(sum(rsp1999),sum(rsm1999),sum(raut1999),sum(rwin1999)))
mortes1999 <- data.frame(season = c("Spring", "Summer", "Autumn", "Winter"),sum_mortes = c(sum(rsp1999),sum(rsm1999),sum(raut1999),sum(rwin1999)))
View(mortes1999)
prop.table(mortes1999$season, mortes1999$sum_mortes)
View(mortes1999)
View(mortes1999)
table(mortes1999$season, mortes1999$sum_mortes)
barplot(mortes1999$season, mortes1999$sum_mortes)
barplot(mortes1999$season, y = mortes1999$sum_mortes)
plot(mortes1999$season, y = mortes1999$sum_mortes)
mortes1999$sum_mortes <- as.factor(mortes1999$sum_mortes)
table(mortes1999$season, mortes1999$sum_mortes)
plot(mortes1999$season, y = mortes1999$sum_mortes)
barplot(mortes1999$season, y = mortes1999$sum_mortes)
chicago <- read.csv("chicago.csv",header = TRUE)
y1997r <- sum(chicago[chicago$year == 1997,]$resp)
y1998r <- sum(chicago[chicago$year == 1998,]$resp)
y1999r <- sum(chicago[chicago$year == 1999,]$resp)
y2000r <- sum(chicago[chicago$year == 2000,]$resp)
#b)Em qual estaçao de 1997 ocorreram mais mortes provocadas por doenças cardiovasculares e em qual estação ocorreram menos mortes provocadas por doenças  cardiovasculares? refaça a questão para os outros anos.
#mortes por cvd no inverno
winter <- chicago[chicago$season == "Winter",]
#mortes por cvd no verao
summer <- chicago[chicago$season == "Summer",]
#mortes por cvd no outono
autumn <- chicago[chicago$season == "Autumn",]
#mortes por cvd na primavera
spring <- chicago[chicago$season == "Spring",]
medtempsp <- mean(spring$temp)
medtempsu <- mean(summer$temp)
medtempau <- mean(autumn$temp)
medtempwi <- mean(winter$temp)
medumsp <- mean(spring$rhum)
medumsu <- mean(summer$rhum)
medumau <- mean(autumn$rhum)
medumwi <- mean(winter$rhum)
medumsp
View(summer)
View(summer)
spring <- na.omit(spring)
summer <- na.omit(summer)
autumn <- na.omit(autumn)
winter <- na.omit(winter)
medumsp <- mean(spring$rhum)
medumsu <- mean(summer$rhum)
medumau <- mean(autumn$rhum)
medumwi <- mean(winter$rhum)
boxplot(spring$temp,summer$temp,autumn$temp,winter$temp)
boxplot(spring$temp,summer$temp,autumn$temp,winter$temp,legend = c("spring","summer","autumn","winter"))
boxplot(spring$temp,summer$temp,autumn$temp,winter$temp)
boxplot(spring$temp,summer$temp,autumn$temp,winter$temp)
pinguim <- read.table("pinguim.txt", header=TRUE, sep = ",")
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
adelie <- pinguim[pinguim$species == "Adelie",]
chinstrap <- pinguim[pinguim$species == "Chinstrap",]
gentoo <- pinguim[pinguim$species == "Gentoo",]
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
plot(chicago$time, chicago$temp)
View(autumn)
chicago <- read.csv("chicago.csv",header = TRUE)
#b)Em qual estaçao de 1997 ocorreram mais mortes provocadas por doenças cardiovasculares e em qual estação ocorreram menos mortes provocadas por doenças  cardiovasculares? refaça a questão para os outros anos.
#mortes por cvd no inverno
winter <- chicago[chicago$season == "Winter",]
#mortes por cvd no verao
summer <- chicago[chicago$season == "Summer",]
#mortes por cvd no outono
autumn <- chicago[chicago$season == "Autumn",]
#mortes por cvd na primavera
spring <- chicago[chicago$season == "Spring",]
plot(chicago$time, chicago$temp)
points(summer$time, summer$temp, col = "orange")
points(spring$time, spring$temp, col = "pink")
points(winter$time, winter$temp, col = "blue")
points(summer$time, summer$temp, col = "green")
points(autumn$time, autumn$temp, col = "red")
View(chicago)
View(chicago)
pinguim <- read.table("pinguim.txt", header=TRUE, sep = ",")
head(pinguim)
str(pinguim)
pinguim<- na.omit(pinguim) #tira os NULL
str(pinguim)
pinguim <- pinguim[-which(pinguim$sex == "."),] #tira o .
pinguim$sex<-as.factor(pinguim$sex)
levels(pinguim$sex)
pinguim <- pinguim[sample(1:nrow(pinguim)),]
n <- round(nrow(pinguim)*0.8)
teste <- pinguim[(n+1):nrow(pinguim),]
pinguim <- pinguim[1:n,]
pinguim$species <- as.factor(pinguim$species)
levels(pinguim$species)
pinguim$island <- as.factor(pinguim$island)
levels(pinguim$island)
adelie <- pinguim[pinguim$species == "Adelie",]
chinstrap <- pinguim[pinguim$species == "Chinstrap",]
gentoo <- pinguim[pinguim$species == "Gentoo",]
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
plot(pinguim$species,pinguim$island)
#gentoo = todos na ilha Biscoe
#chinstrap = todos na ilha Dream
#adelie ta em tds as ilhas
plot(pinguim$flipper_length_mm , y = pinguim$culmen_length_mm)
points(adelie$flipper_length_mm, adelie$culmen_length_mm,pch = 9, col = "blue")
points(chinstrap$flipper_length_mm, chinstrap$culmen_length_mm,pch = 9, col = "green")
points(gentoo$flipper_length_mm, gentoo$culmen_length_mm,pch = 9, col = "red")
abline(h = 44, col = "black")
#comprimento do culmen < 44 e comprimento da asa < 206 => mt provavel q seja adelie
resultado <- c()
for(j in 1:nrow(teste))
{
if(teste$island[j] == "Biscoe")
{
if(teste$culmen_length_mm[j]<=44)
{
if(teste$flipper_length_mm[j]<=206)
{
resultado[j]<- "Adelie"
} else{
resultado[j]<- "Gentoo"
}
}else
{
resultado[j]<- "Gentoo"
}
}else if(teste$island[j] == "Dream")
{
if(teste$culmen_length_mm[j]<=44)
{
if(teste$flipper_length_mm[j]<=206)
{
resultado[j]<- "Adelie"
} else
{
resultado[j]<- "Chinstrap"
}
}else
{
resultado[j]<- "Chinstrap"
}
} else
{
resultado[j]<- "Adelie"
}
}
mean(resultado == teste$species)
#calcular a variancia do peso dos pinguins, e calcular o desvio padrao
#variancia = somatorio(elemento n - media)^2/nº de elementos  (n = 1:nº de elementos)
var(adelie$body_mass_g) #variancia do peso dos adelie
sd(adelie$body_mass_g) #desvio padrao do peso dos adelie
var(chinstrap$body_mass_g)
sd(chinstrap$body_mass_g)
var(gentoo$body_mass_g)
sd(gentoo$body_mass_g)
#calcular coeficiente de variaçao (em %):
#100*sd/mean
cvar1 <- 100*sd(adelie$body_mass_g)/mean(adelie$body_mass_g)
#adelie tem uma variabilidade de 12% em relaçao a media (+- 12% de variação maxima e minima)
cvar2<- 100*sd(gentoo$body_mass_g)/mean(gentoo$body_mass_g)
cvar3<- 100*sd(chinstrap$body_mass_g)/mean(chinstrap$body_mass_g)
# outro metodo de deduzir as especies: põe um ponto num certo espaço, e deduz que, atraves do ponto mais proximo, pontos com uma certa distancia sao do mesmo tipo (pertencem da mesma cor)
# gerar funçao das distancias de um ponto a outro (vetor)
distancia <- function(x,y){
return(sqrt(sum(x-y)**2))
}
x <- c(1,2)
y <- c(3,4)
sum((x-y)**2)
plot(pinguim$flipper_length_mm , y = pinguim$culmen_length_mm)
points(adelie$flipper_length_mm, adelie$culmen_length_mm,pch = 9, col = "blue")
points(chinstrap$flipper_length_mm, chinstrap$culmen_length_mm,pch = 9, col = "green")
points(gentoo$flipper_length_mm, gentoo$culmen_length_mm,pch = 9, col = "red")
points(y = 46, x = 212,pch = 1,col = "black")
previsao <- c()
for(k in 1:nrow(teste))
{
distancias <- c()
for(j in 1:nrow(pinguim))
{
distancias[j] <- distancia(teste[k,3:5],pinguim[j,3:5])
}
previsao[k]<-as.character(pinguim$species[order(distancias)[1:5]]) # comparaçao com 5 elementos seguidos (1:5 -> 5 elementos)
}
previsao
# previsao ta em numeros pq as especies sao fatores de 3 niveis (nivel 1, 2 e 3)
mean(previsao == teste$species)
cor(pinguim[,3:6]) #correlaçao entre elementos
mean(resultado == teste$species)
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
plot(pinguim$species,pinguim$island)
