cos(1)
cos(3)
f<-exp(aux1)*cos(aux1)
#2
#a
a2<-c(10:100)
r_a<-(a2)^3+4*(a2)^2
#2
#a
a2<-c(10:100)
resposta_a<-sum((a2)^3+4*(a2)^2)
sum(r_a)
#b
b2<-c(10:25)
resposta_b<-sum(2+3/b2)
#3
xVec <- sample(x = 0:999, size = 250, replace=T)
yVec <- sample(x = 0:999, size = 250, replace=T)
#a
k<-seq(1,250,2)
imparxVec <- xvec[c(k)]
#3
xVec <- sample(x = 0:999, size = 250, replace=T)
#a
k<-seq(1,250,2)
imparxVec <- xvec[c(k)]
imparxVec <- xVec[c(k)]
#b
sem_o_primeiro_yVec<-yVec[c(2:250)]
sem_o_ultimo_xVec<-xVec[c(1:249)]
result<-sem_o_primeiro_yVec - sem_o_ultimo_xVec<-xVec
result<-sem_o_primeiro_yVec - sem_o_ultimo_xVec
#c
aux2<-c(1,2,3)
a<-rep(aux2,c(248,249,250),1)
a<-rep(aux2,c(248,249,250),1)
#c
aux2<-c(1,2,3)
a<-rep(aux2,c(248,249,250),1)
#c
sem_o_primeiro_xVec<-xVec[c(2:250)]
sem_o_prim_e_seg_xVec<-xVec[c(3:250)]
#3
xVec <- sample(x = 0:999, size = 250, replace=T)
#c
sem_o_primeiro_xVec<-xVec[c(2:250)]
sem_o_prim_e_seg_xVec<-xVec[c(3:250)]
sem_o_primsegterc_xVec<-xVec[c(4:250)]
result_c<- sem_o_primeiro_xVec + 2*sem_o_prim_e_seg_xVec - sem_o_primsegterc_xVec<-xVec
result_c<- sem_o_primeiro_xVec + 2*(sem_o_prim_e_seg_xVec)- sem_o_primsegterc_xVec<-xVec
result_c<- sem_o_primeiro_xVec + 2*(sem_o_prim_e_seg_xVec)- sem_o_primsegterc_xVec
help
help which
help("which"
a
yVec <- sample(x = 0:999, size = 250, replace=T)
#4
r<-which(yVec>600)
#b
r2<-yVec[r]
#c
socorro<-sqrt(abs(xVec - mean(xVec)))
#d
a_direita<-250 - order(yVec)[1]
if(a_direita>200) a_direita<-200
a_esquerda<-order(yVec)[1]-1
if(a_esquerda>200) a_esquerda<-200
r_d<- a_direita + a_esquerda
#e
r_e<-which(xVec%2==0)
2 mod 10
#e
r_e<-which(xVec%%2==0)
#e
resposta_e<-length(which(xVec%%2==0))
#f
pedaco_yVec<-yVec[seq(1,250,3)]
help
print("aaaa")
print(alguem me ajuda)
print('alguem me ajuda')
print("alguem me ajuda")
#5
fibs <- c(1,1)
fibonacci = function(x){
for(j in 3:x)
{
fibs<-c(fibs,(fibs[j-1]+fibs[j-2]))
}
return(fibs)
}
fibonacci(4)
fibonacci(10)
fibs_geral<-c(1,1)
fibonacci_geral = function(n,k){
for(j in 3:n)
{
fibs<-c(fibs,(fibs[j-1]+(fibs[j-2])*k))
}
return(fibs)
}
fibonacci_geral(5,3)
fibs_geral<-c(1,1)
fibonacci_geral = function(n,k){
for(j in 3:n)
{
fibs<-c(fibs,(fibs[j-1]+(fibs[j-2])*k))
}
return(fibs[n])
}
fibonacci_geral(5,3)
if(c(2,3,4)==c(2,3,4))
print(a)
#7
pessoas<-c(1,2,3,4)
resultado<-c()
length(resultado)
#vov? juju(18 reais) e jorel(7 reais) jogam um jogo com moeda, cara: vov? juju da 1 real pro jorel, coroa: joel da 1 real pra vovo juju. o jogo acaba at? que um deles nao tenha mais dinheiro. simule 1 partida, e depois 10000.
#fa?a a m?dia de vit?rias da vovo juju.
vencedor<-c()
acumulado3<-c()
for(j in 1:1000)
{
juju<-18
jorel<-7
moeda<-0
while(juju!=0 & jorel!=0)
{
moeda<-sample(0:1,1) #ou sample(c("cara","coroa"),1)
if(moeda==0) #cara
{
juju<-juju-1
jorel<-jorel+1
}
if(moeda==1) #coroa
{
jorel<-jorel-1
juju<-juju+1
}
}
if(jorel==0)
{
vencedor<-c(vencedor,1) #juju = 1
}else
{
vencedor<-c(vencedor,0) #joel = 0
}
acumulado3<-c(acumulado3,mean(vencedor))
}
mean(vencedor)
plot(x = 1:1000,y = acumulado3,type='l')
abline(h = 0.70,col = 'brown')
#7
pessoas<-c(1,2,3,4)
resultado<-c()
for(j in 1:100000){
i<-0
sorteio<-sample(1:4,4,False)
while(i<4){
if(pessoas[i]==sorteio[i]){
resultado<-c(resultado,0)
break
}
i<-i+1
}
if(length(resultado)<j){
resultado<-c(resultado,1)
}
}
#7
pessoas<-c(1,2,3,4)
resultado<-c()
for(j in 1:100000){
i<-0
sorteio<-sample(1:4,4)
while(i<4){
if(pessoas[i]==sorteio[i]){
resultado<-c(resultado,0)
break
}
i<-i+1
}
if(length(resultado)<j){
resultado<-c(resultado,1)
}
}
mean(resultado)
#7
pessoas<-c(1,2,3,4)
resultado<-c()
for(j in 1:100000){
i<-1
sorteio<-sample(1:4,4)
while(i<4){
if(pessoas[i]==sorteio[i]){
resultado<-c(resultado,0)
break
}
i<-i+1
}
if(length(resultado)<j){
resultado<-c(resultado,1)
}
}
mean(resultado)
mean(resultado)
#8
num.impar = function(v){
x<-length(v)
contador<-0
for(j in 1:v){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
num.impar(1,2,3,4)
num.impar(1 2 3 4 5)
num.impar([1,2,3,4])
num.impar(c(1,2,3,4,5,6,7))
#8
num.impar = function(v[]){
num.impar(c(1,2,3,4))
#8
v<-c()
num.impar = function(v){
x<-length(v)
contador<-0
for(j in 1:v){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
num.impar(c(1,2,3,4,5))
#8
num.impar = function(v[]){
#8
num.impar = function(v<-c()){
#8
num.impar = function(v){
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
#8
v<-c(1,2,3,4,5,6)
num.impar = function(v){
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
contador
contador
#8
v<-c(1,2,3,4,5,6)
num.impar = function(v){
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
num.impar
contador
#8
v<-c(1,2,3,4,5,6)
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
contador
num.impar = function(v) deparse(substitute(x)) {
#8
v <- readline(prompt="escreva o vetor: ")
v[1]
#8
v <- scan(what = int())
#8
v <- scan(what = list)
#8
v <- scan(list)
#8
v <- scan("",list)
#8
v <- scan()
v
v[1]
#8
v <- c()
num.impar = function(v) {
v<-scan()
x<-length(v)
contador<-0
for(j in 1:x){
if(v[j]%%2==1){
contador<-contador+1
}
}
return(contador)
}
num.impar(v)
if(s==7 | s==11) resultados <- c(resultados,1)
else if(s==2 | s==3 | s==12) resultados <- c(resultados,0)
else
if(s==7 | s==11)
{resultados <- c(resultados,1)}else
if(s==2 | s==3 | s==12) {resultados <- c(resultados,0)}else
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
s==7
dado1+dado2
s==7 | s==11
s2<-s
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}
}
}
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 && s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
mean(resultados)
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
setwd("C:/Users/maria luisa/OneDrive/Documentos/dev/minhas-coisinhasinhas/R")
pinguim <- read.table("pinguim.txt", header=TRUE, sep = ",")
head(pinguim)
str(pinguim)
pinguim<- na.omit(pinguim) #tira os NULL
str(pinguim)
pinguim <- pinguim[-which(pinguim$sex == "."),] #tira o .
pinguim$sex<-as.factor(pinguim$sex)
levels(pinguim$sex)
pinguim$species <- as.factor(pinguim$species)
levels(pinguim$species)
pinguim$island <- as.factor(pinguim$island)
levels(pinguim$island)
adelie <- pinguim[pinguim$species == "Adelie",]
chinstrap <- pinguim[pinguim$species == "Chinstrap",]
gentoo <- pinguim[pinguim$species == "Gentoo",]
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
boxplot(adelie$flipper_length_mm,chinstrap$flipper_length_mm,gentoo$flipper_length_mm)
boxplot(adelie$body_mass_g,chinstrap$body_mass_g,gentoo$body_mass_g)
boxplot(adelie$culmen_depth_mm,chinstrap$culmen_depth_mm,gentoo$culmen_depth_mm)
