s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 | s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
s==7
dado1+dado2
s==7 | s==11
s2<-s
#9
dado1 <- 0
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}
}
}
dado1 <- 0
s2<-0
resultados<-c()
for(j in 1:1000)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
s2<-s
if(s==7 | s==11)
{
resultados <- c(resultados,1)
}else{
if(s==2 | s==3 | s==12)
{
resultados <- c(resultados,0)
}else
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
while(s!=7 && s!=s2)
{
dado1 <- sample(1:6,1)
dado2 <- sample(1:6,1)
s<-dado1+dado2
}
if(s==7) c(resultados,0)
if(s==s2) c(resultados,1)
}
}
}
mean(resultados)
#questao 1)
teste <- read.table("teste_baleias.txt", header = TRUE, sep = ",")
setwd("C:/Users/maria luisa/OneDrive/Documentos/dev/minhas-coisinhasinhas/R")
#questao 1)
teste <- read.table("teste_baleias.txt", header = TRUE, sep = ",")
#questao 1)
teste <- read.table("teste_baleias.txt", header = TRUE, sep = ",")
#questao 1)
treino <- read.table("treino_baleias.txt", header = TRUE, sep = ",")
View(treino)
#a)
treino$especie <- as.factor(treino$especie)
azul <- treino[treino$especie == "Baleia Azul",]
cachalote <- treino[treino$especie == "Cachalote",]
Jubarte <- treino[treino$especie == "Jubarte",]
fin <- treino[treino$especie == "Baleia Fin",]
#média do peso de cada baleia:
mean(azul$peso) # =
mean(cachalote$peso) # =
mean(jubarte$peso) # =
jubarte <- treino[treino$especie == "Jubarte",]
rm(Jubarte)
mean(jubarte$peso) # =
mean(fin$peso) # =
#variância do peso de cada baleia:
var(azul$peso) # =
var(cachalote$peso)
var(jubarte$peso) # =
var(fin$peso)
#desvio padrão do peso de cada baleia:
sd(azul$peso)
sd(cachalote$peso) # =
sd(jubarte$peso) # =
sd(fin$peso) # =
#coeficiente de variância do peso de cada baleia:
100*sd(azul$peso)/mean(azul$peso) # =
100*sd(cachalote$peso)/mean(cachalote$peso) # =
100*sd(jubarte$peso)/mean(jubarte$peso) # =
100*sd(fin$peso)/mean(fin$peso)
#c)
#escolhi calcular a mediana do volume do crânio das baleias fin:
mediana_fin <- sort(fin$volume_cranio)[26,]
#c)
#escolhi calcular a mediana do volume do crânio das baleias fin:
mediana_fin <- sort(fin$volume_cranio)[26]
boxplot(fin$volume_cranio)
abline(h = 9405)
#c)
#escolhi calcular a mediana do volume do crânio das baleias fin:
mediana_fin <- sort(fin$volume_cranio)[length(fin$volume_cranio)/2 + 1] #9405
peso <- c(sum(azul$peso),sum(cachalote$peso),sum(jubarte$peso),sum(fin$peso))
hist(peso)
rm(peso)
hist(azul$peso)
hist(azul$peso, mean = "tabela de frequencia do peso de baleia azul")
View(azul)
#e)
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso)
#e)
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso, names = c("baleia azul","cachalote","jubarte","baleia fin"))
#e)
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso, names = c("baleia azul","cachalote","jubarte","baleia fin"))$data
#e)
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso, names = c("baleia azul","cachalote","jubarte","baleia fin"))
#f)
boxplot(azul$comprimento, cachalote$comprimento, jubarte$comprimento, fin$comprimento, names = c("baleia azul","cachalote","jubarte","baleia fin"))
#e)
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso, names = c("baleia azul","cachalote","jubarte","baleia fin"))
#f)
boxplot(azul$comprimento, cachalote$comprimento, jubarte$comprimento, fin$comprimento, names = c("baleia azul","cachalote","jubarte","baleia fin"))
#pode-se inferir que existem valores de comprimento que se encontram em mais de uma espécie.
# a baleia mais comprida é baleia azul, e a mais curta é uma jubarte
boxplot(azul$profundidade_maxima, cachalote$profundidade_maxima, jubarte$profundidade_maxima, fin$profundidade_maxima, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$volume_cranio, cachalote$volume_cranio, jubarte$volume_cranio, fin$volume_cranio, names = c("baleia azul","cachalote","jubarte","baleia fin"))
plot(treino$comprimento,treino$profundidade_maxima)
points(azul$comprimento,azul$profundidade_maxima,col = "blue")
points(cachalote$comprimento,cachalote$profundidade_maxima, col = "yellow")
points(jubarte$comprimento,jubarte$profundidade_maxima, col = "green")
points(fin$comprimento, fin$profundidade_maxima, col = "red")
boxplot(azul$peso, cachalote$peso, jubarte$peso, fin$peso, names = c("baleia azul","cachalote","jubarte","baleia fin"))
abline(h = 15000)
abline(h = 16000)
boxplot(azul$comprimento, cachalote$comprimento, jubarte$comprimento, fin$comprimento, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$profundidade_maxima, cachalote$profundidade_maxima, jubarte$profundidade_maxima, fin$profundidade_maxima, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$comprimento, cachalote$comprimento, jubarte$comprimento, fin$comprimento, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$profundidade_maxima, cachalote$profundidade_maxima, jubarte$profundidade_maxima, fin$profundidade_maxima, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$volume_cranio, cachalote$volume_cranio, jubarte$volume_cranio, fin$volume_cranio, names = c("baleia azul","cachalote","jubarte","baleia fin"))
boxplot(azul$profundidade_maxima, cachalote$profundidade_maxima, jubarte$profundidade_maxima, fin$profundidade_maxima, names = c("baleia azul","cachalote","jubarte","baleia fin"))
plot(treino$comprimento,treino$profundidade_maxima)
points(azul$comprimento,azul$profundidade_maxima,col = "blue")
points(cachalote$comprimento,cachalote$profundidade_maxima, col = "yellow")
points(jubarte$comprimento,jubarte$profundidade_maxima, col = "green")
points(fin$comprimento, fin$profundidade_maxima, col = "red")
abline(h = 170)
#h)
resultado <- c()
for(j in 1:nrow(teste))
{
if(teste$peso[j]>16000)
{
resultado <- c(resultado, "Baleia Azul")
} else {
if(teste$profundidade_maxima[j]<=170)
{
resultado <- c(resultado, "Cachalote")
} else {
if(teste$comprimento[j]>=22)
{
resultado <- c(resultado, "Baleia Fin")
} else {
resultado <- c(resultado, "Jubarte")
}
}
}
}
mean(teste$especie == resultado)
plot(treino$comprimento,treino$profundidade_maxima)
points(azul$comprimento,azul$profundidade_maxima,col = "blue")
points(cachalote$comprimento,cachalote$profundidade_maxima, col = "yellow")
points(jubarte$comprimento,jubarte$profundidade_maxima, col = "green")
points(fin$comprimento, fin$profundidade_maxima, col = "red")
abline(h = 170)
abline(v = 22)
#questao 2)
res_garnit <- c()
res_steven <- c()
for(j in 1:10){
garnit <- sample(0:1,3)
steven <- sample(0:1,3)
moeda <- sample(0:1,3)
i <- 0
while(res_garnit[j]!=1 & res_steven[j]!=1){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
#questao 2)
res_garnit <- c()
res_steven <- c()
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
while(res_garnit[j]!=1 & res_steven[j]!=1){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
#questao 2)
res_garnit <- c(0)
res_steven <- c(0)
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
while(res_garnit[j]!=1 & res_steven[j]!=1){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
#questao 2)
res_garnit <- c(0)
res_steven <- c(0)
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
while(res_garnit[j+1]!=1 & res_steven[j+1]!=1){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
#questao 2)
res_garnit <- c(0)
res_steven <- c(0)
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
while(res_garnit[j]!=1 & res_steven[j]!=1){
if(i==0){
res_garnit <- res_garnit[-1]
res_steven <- res_steven[-1]
}
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
mean(res_garnit)
#questao 2)
res_garnit <- c(0)
res_steven <- c(0)
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
while(res_garnit[j]!=1 & res_steven[j]!=1){
if(i==0){
res_garnit <- c()
res_steven <- c()
}
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
} else {
i <- i + 1
}
}
}
mean(res_garnit)
#questao 2)
res_garnit <- c()
res_steven <- c()
for(j in 1:10){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
deu <- 0
while(deu == 0){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
deu <- 1
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
deu <- 1
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
deu <- 1
} else {
i <- i + 1
}
}
}
mean(res_garnit)
#questao 2)
res_garnit <- c()
res_steven <- c()
for(j in 1:10000){
garnit <- sample(0:1,3,replace = TRUE)
steven <- sample(0:1,3, replace = TRUE)
moeda <- sample(0:1,3, replace = TRUE)
i <- 0
deu <- 0
while(deu == 0){
comparaS <- 0
comparaG <- 0
if(i>0){
moeda <- c(moeda,sample(0:1,1))
}
for(k in 1:3){
if(moeda[k+i] == garnit[k]) comparaG <- comparaG + 1
if(moeda[k+i] == steven[k]) comparaS <- comparaS + 1
}
if(comparaG == 3 && comparaS == 3)
{
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
deu <- 1
}else if(comparaG == 3){
res_garnit <- c(res_garnit,1)
res_steven <- c(res_steven,0)
deu <- 1
} else if(comparaS == 3){
res_garnit <- c(res_garnit,0)
res_steven <- c(res_steven,1)
deu <- 1
} else {
i <- i + 1
}
}
}
mean(res_garnit)
read.table = ("dados.txt",header = TRUE ,sep = ",")
read.table = ("dados.txt",header = TRUE ,sep = ";")
vitimas = read.table("dados.txt",header = TRUE ,sep = ";")
#a)
vitimas$sexo = as.factor(vitimas$sexo)
barplot(vitimas$sexo)
barplot(table(vitimas$sexo))
table(vitimas$sexo)
#b)
hist(vitimas$idade)
#b)
hist(vitimas$idade, breaks = 6)
#c)
boxplot(vitimas$idade)
#d)
boxplot(vitimas$hora)
